# use as a template and copy it to ../config.mf

# ?= does not overwrite automatic make variables

#PREFIX ?=

RTLIB = $(PREFIX)/include/rtlib
RT_CPPFLAGS = -I$(RTLIB) -I$(RTLIB)/.. -I$(RTLIB)/../librna
RT_LDFLAGS = -Xlinker -rpath -Xlinker $(PREFIX)/lib -L$(PREFIX)/lib
RT_LDLIBS = -lrna

BOOST_PREFIX ?= /usr

#BOOST_LIB_SUFFIX ?= 
BOOST_INCLUDE ?= include

CXX = g++
CC = gcc

LD = $(CC)
SHARED_FLAGS ?= -shared
PIC_FLAGS ?= -fpic

LEX = flex
YACC = bison

# bash should work, too
KSH = ksh

HG = hg

SED = sed

#CFLAGS_EXTRA ?=
CFLAGS ?= -Wall -Wno-char-subscripts -Wmissing-prototypes -g -std=c99 \
  $(CFLAGS_EXTRA)
CFLAGS_OPT ?= -O3 -DNDEBUG -std=c99
CFLAGS_FP_FAST ?= $(CFLAGS_OPT)
#CXXFLAGS_EXTRA ?=
CXXFLAGS ?= -Wall -Wnon-virtual-dtor -Wno-parentheses -g $(CXXFLAGS_EXTRA)
CXXFLAGS_OPENMP ?= -fopenmp

#CPPFLAGS_EXTRA ?=

#LDFLAGS_EXTRA ?=

ifeq ($(BOOST_PREFIX),/usr)
  LDFLAGS ?= $(LDFLAGS_EXTRA) $(RTLIB_LDFLAGS)
  CPPFLAGS ?= $(CPPFLAGS_EXTRA) $(RTLIB_CPPFLAGS)
else
  LDFLAGS ?=  $(LDFLAGS_EXTRA) $(RTLIB_LDFLAGS) -L$(BOOST_PREFIX)/lib
  CPPFLAGS ?= $(CPPFLAGS_EXTRA) $(RTLIB_CPPFLAGS) -I$(BOOST_PREFIX)/$(BOOST_INCLUDE)
endif

#YFLAGS ?= 

#LDLIBS_EXTRA ?= 
LDLIBS ?= $(LDLIBS_EXTRA) $(RTLIB_LDLIBS)

