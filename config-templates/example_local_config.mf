
PREFIX ?= $(HOME)/local/gapc

RTLIB = $(PREFIX)/include/rtlib
RT_CPPFLAGS = -I$(RTLIB) -I$(RTLIB)/.. -I$(RTLIB)/../librna
RT_LDFLAGS = -Xlinker -rpath -Xlinker $(PREFIX)/lib -L$(PREFIX)/lib
RT_LDLIBS = -lrna

BOOST_PREFIX ?= $(HOME)/local/boost-1.38
BOOST_LIB_SUFFIX ?= -mt
BOOST_INCLUDE ?= include/boost-1_38


CXX = g++
CC = gcc

LD = $(CC)
SHARED_FLAGS ?= -shared
PIC_FLAGS ?= -fpic

LEX = flex
YACC = bison

# bash should work, too
KSH = ksh

HG = hg

SED = sed

GSLLIBS = -lgsl -lcblas

#CFLAGS_EXTRA ?=
CFLAGS ?= -Wall -Wno-char-subscripts -Wmissing-prototypes -Wtype-limits -g -std=c99 \
  $(CFLAGS_EXTRA)
CFLAGS_OPT ?= -std=c99 -O3 -DNDEBUG

CFLAGS_FP_FAST ?= -std=c99 -O3 -DNDEBUG -ffast-math

# -Wconversion
#  warns about size_t to unsigned char assignments,
#  but also about e.g. char = char+char assignments, which is too much
# -Wsign-conversion
#  bison code, rtlib code way too much noise

#CXXFLAGS_EXTRA ?= -O3 -DNDEBUG
CXXFLAGS ?= -Wall -Wnon-virtual-dtor -Wno-parentheses -g $(CXXFLAGS_EXTRA)
CXXFLAGS_OPENMP ?= -fopenmp

#CPPFLAGS_EXTRA ?=

#LDFLAGS_EXTRA ?= -Xlinker -rpath -Xlinker $(HOME)/local/boost-1.38/lib

LDFLAGS ?=  $(LDFLAGS_EXTRA) $(RTLIB_LDFLAGS)
#-L$(BOOST_PREFIX)/lib

CPPFLAGS ?= $(CPPFLAGS_EXTRA) $(RTLIB_CPPFLAGS)
#-I$(BOOST_PREFIX)/$(BOOST_INCLUDE)

#YFLAGS ?= 

#LDLIBS_EXTRA ?= 
LDLIBS ?= $(LDLIBS_EXTRA) $(RTLIB_LDLIBS)


