# use as a template and copy it to ../config.mf

PREFIX = /vol/gapc/
BOOST_PREFIX = /vol/gapc
BOOST_LIB_SUFFIX = -gcc44-mt-1_52

#bash should work, too
KSH = /vol/gnu/bin/bash 
CXX = g++ 
CC = gcc 
LD = $(CC)
LEX = flex
YACC = bison
HG = hg
SED = sed

TRUTHDIR = ../Truth
SYSTEM_SUFFIX := _linux

# ============== VARS STEFAN ==================
INCLUDE_PATH=/include
LIB_PATH=/lib

LIB_RT = rtlib
LIB_RNA = librna
LIB_GENERAL = 
LIB_BOOST = $(BOOST_PREFIX)/include/boost-1_52
LIB_GSL = /vol/gapc/

l_GSL = -lgsl -lgslcblas
l_RNA = -lrna

64FLAGS = 

#bison versions <=2.6 and > 2.6 are not compatible, thus we have to cheat via a compiler flag to be able to compile with both bison version numbers
versionnumber := $(shell $(YACC) --version | head -n 1 | cut -d ' ' -f 4 | cut -b 1-3 | tr -d '.')
BISON_VERSION_FLAG := $(shell if [ "$(versionnumber)" -ge 30 ]; then echo " -DBISONNEW "; else echo ""; fi)

#for preprocessor
CPPFLAGS = -I$(PREFIX)$(INCLUDE_PATH)/$(LIB_GENERAL) -I$(LIB_BOOST) $(CPPFLAGS_EXTRA)
CPPFLAGS += $(shell test -d $(PREFIX)$(INCLUDE_PATH)/$(LIB_RT) && echo "-I$(PREFIX)$(INCLUDE_PATH)/$(LIB_RT)")
CPPFLAGS += $(shell test -d $(PREFIX)$(INCLUDE_PATH)/$(LIB_RNA) && echo "-I$(PREFIX)$(INCLUDE_PATH)/$(LIB_RNA)")
CPPFLAGS += $(shell test -d $(LIB_GSL)$(INCLUDE_PATH) && echo "-I$(LIB_GSL)$(INCLUDE_PATH)")

#for compiler
CXXFLAGS_EXTRA ?= -O3 -DNDEBUG
CXXFLAGS = $(64FLAGS) -MMD -MP -D_XOPEN_SOURCE=500 -g -Wall -Wnon-virtual-dtor -Wno-parentheses -Wno-unused-variable $(BISON_VERSION_FLAG) $(CXXFLAGS_EXTRA)

#for linker
LDFLAGS = $(64FLAGS) $(LDFLAGS_EXTRA) \
	-L$(PREFIX)$(LIB_PATH)/$(LIB_GENERAL) -Xlinker -rpath -Xlinker $(PREFIX)$(LIB_PATH)/$(LIB_GENERAL) \
	-L$(BOOST_PREFIX)/lib -Xlinker -rpath -Xlinker $(BOOST_PREFIX)/lib
LDFLAGS += $(shell test -d $(PREFIX)$(LIB_PATH)/$(LIB_RT) && echo "-L$(PREFIX)$(LIB_PATH)/$(LIB_RT) -Xlinker -rpath -Xlinker $(PREFIX)$(LIB_PATH)/$(LIB_RT)")
LDFLAGS += $(shell test -d $(PREFIX)$(LIB_PATH)/$(LIB_RNA) && echo "-L$(PREFIX)$(LIB_PATH)/$(LIB_RNA) -Xlinker -rpath -Xlinker $(PREFIX)$(LIB_PATH)/$(LIB_RNA)")
LDFLAGS += $(shell test -d $(LIB_GSL)$(LIB_PATH) && echo "-L$(LIB_GSL)$(LIB_PATH) -Xlinker -rpath -Xlinker $(LIB_GSL)$(LIB_PATH)")


# ============== VARS GEORG ==================
SHARED_FLAGS = -shared -m64
PIC_FLAGS = -fpic
LIBGSL = $(LIB_GSL)$(LIB_PATH)/libgsl.a
POSIXLIBS = -lrt
CFLAGS = --std=c99 -m64 $(CFLAGS_EXTRA)
CFLAGS_OPT ?= --std=c99 -m64 -O3 -DNDEBUG
CFLAGS_FP_FAST ?= --std=c99 $(CFLAGS_OPT) -ffast-math
CXXFLAGS_OPENMP = -fopenmp

RTLIB = $(PREFIX)$(INCLUDE_PATH)/$(LIB_RT)
#~ RT_CPPFLAGS = -I$(RTLIB) -I$(RTLIB)/.. -I$(RTLIB)/../librna
#~ RT_LDFLAGS = -R$(PREFIX)/lib -L$(PREFIX)/lib
RT_LDLIBS = $(l_RNA)
GSLLIBS = $(l_GSL)

#~ #GEORGCXXFLAGS_EXTRA ?= -O3 -DNDEBUG
#~ #GEORG~ CXXFLAGS = -D_XOPEN_SOURCE=500 -m64 -g -Wall -Wnon-virtual-dtor -Wno-parentheses $(CXXFLAGS_EXTRA)
#~ LDFLAGS = $(LDFLAGS_EXTRA) $(RTLIB_LDFLAGS) -m64 -L$(BOOST_PREFIX)/lib $(RT_LDFLAGS) -L/vol/gcc-4.5/lib/amd64 -R/vol/gcc-4.5/lib/amd64 -R$(RTLIB)/../librna
#~ C_LDFLAGS = $(LDFLAGS_EXTRA) -m64 -R$(PREFIX)/lib
#~ CPPFLAGS =  $(CPPFLAGS_EXTRA) $(RT_CPPFLAGS) -I$(PREFIX)/include -I$(BOOST_PREFIX)/$(BOOST_INCLUDE) 
#~ #GEORGYFLAGS ?= 
#~ #GEORGLDLIBS_EXTRA =
LDLIBS = $(LDLIBS_EXTRA) $(RTLIB_LDLIBS)

